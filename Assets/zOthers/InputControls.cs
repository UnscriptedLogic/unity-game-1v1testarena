//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/zOthers/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""DefaultControls"",
            ""id"": ""e93f2d6e-23c6-46e7-afe2-11fd62da815e"",
            ""actions"": [
                {
                    ""name"": ""CameraAxisX"",
                    ""type"": ""Value"",
                    ""id"": ""9b42947e-a587-4600-80e3-3b518a843047"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraAxisY"",
                    ""type"": ""Value"",
                    ""id"": ""64956a0e-584a-4538-ac3e-c06c71bb8bfd"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraMovementDetector"",
                    ""type"": ""Value"",
                    ""id"": ""b9d074f9-8861-41ba-941c-69cd7b66e992"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""a0a00aa9-96b0-4bfc-a8e9-f4d65ef5a8ba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""050c893d-0fc7-4324-984d-801deaab52f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""a9e79e0e-9198-4886-8916-4e82578d13b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6ac423ee-1122-4b00-9140-b1db2d2a741b"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraAxisX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""075a3421-b306-4ab4-b84a-708a5b1b155e"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraAxisY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1c7af2a-4667-4e24-bc12-857faa3b9c71"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovementDetector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""393aebff-94e3-49d4-a493-36cbef979b87"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""44e4accf-ca12-4553-aabf-85ae756004a6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1cfa31f0-7e34-46ea-9022-d5af2091a589"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1e8854d4-2ef4-43e0-bdb7-1ec217b6b969"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""84b79d1b-ba4c-4b52-8038-e98b4a71dc64"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e3ff5f70-4f0c-4abc-88a8-a13a34b8192d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bcf1bad-f656-4de1-89f7-1f8965c406e7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // DefaultControls
        m_DefaultControls = asset.FindActionMap("DefaultControls", throwIfNotFound: true);
        m_DefaultControls_CameraAxisX = m_DefaultControls.FindAction("CameraAxisX", throwIfNotFound: true);
        m_DefaultControls_CameraAxisY = m_DefaultControls.FindAction("CameraAxisY", throwIfNotFound: true);
        m_DefaultControls_CameraMovementDetector = m_DefaultControls.FindAction("CameraMovementDetector", throwIfNotFound: true);
        m_DefaultControls_Movement = m_DefaultControls.FindAction("Movement", throwIfNotFound: true);
        m_DefaultControls_Jump = m_DefaultControls.FindAction("Jump", throwIfNotFound: true);
        m_DefaultControls_UseItem = m_DefaultControls.FindAction("UseItem", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DefaultControls
    private readonly InputActionMap m_DefaultControls;
    private IDefaultControlsActions m_DefaultControlsActionsCallbackInterface;
    private readonly InputAction m_DefaultControls_CameraAxisX;
    private readonly InputAction m_DefaultControls_CameraAxisY;
    private readonly InputAction m_DefaultControls_CameraMovementDetector;
    private readonly InputAction m_DefaultControls_Movement;
    private readonly InputAction m_DefaultControls_Jump;
    private readonly InputAction m_DefaultControls_UseItem;
    public struct DefaultControlsActions
    {
        private @InputControls m_Wrapper;
        public DefaultControlsActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraAxisX => m_Wrapper.m_DefaultControls_CameraAxisX;
        public InputAction @CameraAxisY => m_Wrapper.m_DefaultControls_CameraAxisY;
        public InputAction @CameraMovementDetector => m_Wrapper.m_DefaultControls_CameraMovementDetector;
        public InputAction @Movement => m_Wrapper.m_DefaultControls_Movement;
        public InputAction @Jump => m_Wrapper.m_DefaultControls_Jump;
        public InputAction @UseItem => m_Wrapper.m_DefaultControls_UseItem;
        public InputActionMap Get() { return m_Wrapper.m_DefaultControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultControlsActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultControlsActions instance)
        {
            if (m_Wrapper.m_DefaultControlsActionsCallbackInterface != null)
            {
                @CameraAxisX.started -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraAxisX;
                @CameraAxisX.performed -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraAxisX;
                @CameraAxisX.canceled -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraAxisX;
                @CameraAxisY.started -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraAxisY;
                @CameraAxisY.performed -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraAxisY;
                @CameraAxisY.canceled -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraAxisY;
                @CameraMovementDetector.started -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraMovementDetector;
                @CameraMovementDetector.performed -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraMovementDetector;
                @CameraMovementDetector.canceled -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnCameraMovementDetector;
                @Movement.started -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnJump;
                @UseItem.started -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnUseItem;
                @UseItem.performed -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnUseItem;
                @UseItem.canceled -= m_Wrapper.m_DefaultControlsActionsCallbackInterface.OnUseItem;
            }
            m_Wrapper.m_DefaultControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraAxisX.started += instance.OnCameraAxisX;
                @CameraAxisX.performed += instance.OnCameraAxisX;
                @CameraAxisX.canceled += instance.OnCameraAxisX;
                @CameraAxisY.started += instance.OnCameraAxisY;
                @CameraAxisY.performed += instance.OnCameraAxisY;
                @CameraAxisY.canceled += instance.OnCameraAxisY;
                @CameraMovementDetector.started += instance.OnCameraMovementDetector;
                @CameraMovementDetector.performed += instance.OnCameraMovementDetector;
                @CameraMovementDetector.canceled += instance.OnCameraMovementDetector;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @UseItem.started += instance.OnUseItem;
                @UseItem.performed += instance.OnUseItem;
                @UseItem.canceled += instance.OnUseItem;
            }
        }
    }
    public DefaultControlsActions @DefaultControls => new DefaultControlsActions(this);
    public interface IDefaultControlsActions
    {
        void OnCameraAxisX(InputAction.CallbackContext context);
        void OnCameraAxisY(InputAction.CallbackContext context);
        void OnCameraMovementDetector(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
    }
}
